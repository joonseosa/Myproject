<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper">

	<resultMap type="map" id="maplist">
		<result column="seq" property="seq" />
		<result column="mem_id" property="memId" />
		<result column="mem_name" property="memName" />
		<result column="board_subject" property="boardSubject" />
		<result column="board_content" property="boardContent" />
		<result column="reg_date" property="regDate" />
		<result column="upt_date" property="uptDate" />
		<result column="view_cnt" property="viewCnt" />
	
	</resultMap>
	<!-- 총 게시글 갯수 출력 -->
<!-- <select id="countBoard" resultType="int">
	select count(*) from board_study
</select> -->

<!-- 페이징 처리 후 게시글 조회 -->
<!-- <select id="selectBoard" parameterType="map" resultMap="maplist">
	select * 
		from (
			select rownum rn, a.* 
				from (
						select * 
						from board_study 
						order by seq desc 
						) a
				)
	where rn between #{start} and #{end}
</select> -->
	
	<select id="pageCnt" parameterType="map" resultType="int">
		select
		count(seq)
		from board_study
		where 1=1
		<choose>
		<when test="searchOp == 'writer'">
			and (mem_name like '%'||#{searchTy}||'%' OR mem_id like '%'||#{searchTy}||'%')
			</when>
			<when test="searchOp == 'subject'">
			and board_subject like'%'||#{searchTy}||'%'  
			</when> 
		
			<when test="searchOp == 'subjectCn'">
			and (board_subject like'%'||#{searchTy}||'%' OR board_content like '%'||#{searchTy}||'%') 
			</when>
		</choose>
		<if test="stDate != null and stDate != ''">
			and to_char(reg_date,'mm/dd/yyyy') between #{stDate} and #{edDate}
			</if>
	
	</select>

	




	<select id="list" parameterType="map" resultMap="maplist">
		
<!-- 		 	인덱스 정렬을 위해 로우넘버 , -->		 	
			select
		 	seq
		 	,mem_id
		 	,mem_name
		 	,board_subject
		 	,board_content
		 	,reg_date
		 	,upt_date
		 	,view_cnt
		from (
			select
					row_number() over(order by seq desc) rnum
				 	,seq
				 	,mem_id
				 	,mem_name
				 	,board_subject
				 	,board_content
				 	,reg_date
				 	,upt_date
				 	,view_cnt
		       from board_study
		       where 1=1
		       <choose>
		       <when test="searchOp == 'writer'">
			and (mem_name like '%'||#{searchTy}||'%' OR mem_id like '%'||#{searchTy}||'%')
			</when>
			<when test="searchOp == 'subject'">
			and board_subject like'%'||#{searchTy}||'%'  
			</when> 
		
			<when test="searchOp == 'subjectCn'">
			and (board_subject like'%'||#{searchTy}||'%' OR board_content like '%'||#{searchTy}||'%') 
			</when>
		       </choose>
		     <if test="stDate != null and stDate != ''">
			and to_char(reg_date,'mm/dd/yyyy') between #{stDate} and #{edDate}
			</if>  
		       
			 )
		where rnum between #{pageNo} * #{listSize} - #{listSize}+1 and #{pageNo} * #{listSize}
	<!-- 	order by seq desc -->
	 
	</select>
	
	<insert id="insert" parameterType="map">
  	<selectKey keyProperty="seq" resultType="int" order="BEFORE">
       SELECT NVL(MAX(seq),0)+1 FROM board_study
    </selectKey>
       insert into board_study
                   (seq
                   ,mem_id
                   ,mem_name
                   ,board_subject
                   ,board_content
                   ,reg_date
                   ,upt_date
                   ,view_cnt)
                values
                   (#{seq}
                   ,#{mem_id}
                   ,#{mem_name}
                   ,#{board_subject}
                   ,#{board_content}
                   ,sysdate
                   ,null
                   ,0
                   )
    </insert>
    
    <update id="viewCnt" parameterType="int">
    update board_study
    set
      view_cnt = view_cnt+1
      where seq =#{seq}
    
    </update>
    
    
    
    <select id="detail" parameterType="int" resultMap="maplist">
    	select
    		seq
    		 ,mem_id
		 	,mem_name
		 	,board_subject
		 	,board_content
    from board_study
    where seq =#{seq}
    
    </select>
	
	<update id="update">
		update board_study
		set
			mem_id = #{mem_id}
		 	,mem_name = #{mem_name}
		 	,board_subject = #{board_subject}
		 	,board_content = #{board_content}
		 	,upt_date = sysdate
		where seq=#{seq}
	
	</update>
	
	<delete id="delete" parameterType="list">
	
	delete from board_study
	where seq in  
	  				<foreach collection="list" open="(" close=")" separator="," item="chk">
                    #{chk.value}
                  </foreach>
	
	</delete>
	
	
	<select id="milist" resultMap="maplist" parameterType="map">
	              select 
	                   seq
			          , mem_id
			          , mem_name
			          , board_subject
			          , board_content
			          , reg_date
			          , upt_date
			          , view_cnt
						
					from board_study
					where 1=1
	   			<choose>
	   			
									<!-- selectSearch 의 코드 컬럼      ex :  name, subject ,subCont -->		       
			<when test="searchOp == 'name'">
			and (mem_name like '%'||#{searchTy}||'%' OR mem_id like '%'||#{searchTy}||'%')
			</when>
			<when test="searchOp == 'subject'">
			and board_subject like'%'||#{searchTy}||'%'  
			</when> 
		
			<when test="searchOp == 'subCont'">
			and (board_subject like'%'||#{searchTy}||'%' OR board_content like '%'||#{searchTy}||'%') 
			</when>
		       </choose>
			 <if test="stDate != null and stDate != ''">
			and to_char(reg_date,'mm/dd/yyyy') between #{stDate} and #{edDate}
			</if>  
				
	
	    </select>
	   		
	   
	   
	
	
	
	
</mapper>
